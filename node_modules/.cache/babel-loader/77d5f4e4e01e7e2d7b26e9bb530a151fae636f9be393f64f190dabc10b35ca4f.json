{"ast":null,"code":"var _jsxFileName = \"D:\\\\9raya_2\\\\TEST\\\\fullstack-jwt-chapter_1\\\\frontend\\\\src\\\\components\\\\AdminUser.js\";\nimport React, { Component } from 'react';\nimport { request } from '../helpers/axios_helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class UsersContent extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteUser = id => {\n      request('DELETE', `/User/${id}`).then(response => {\n        // Assuming you want to refresh the user list after deletion\n        this.fetchUsers();\n        console.log(\"data:\", response.data);\n      }).catch(error => {\n        if (error.response && error.response.status === 401) {\n          // Handle unauthorized access\n        } else {\n          this.setState({\n            data: []\n          }); // Set an empty array or handle error appropriately\n        }\n      });\n    };\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    const role = localStorage.getItem('role');\n\n    // Check if 'role' exists before making the request\n    if (!role) {\n      return;\n    }\n    this.fetchUsers();\n  }\n  fetchUsers() {\n    request('GET', '/GetUser').then(response => {\n      this.setState({\n        data: response.data\n      });\n      console.log(\"data:\", response.data);\n    }).catch(error => {\n      if (error.response && error.response.status === 401) {\n        // Handle unauthorized access\n      } else {\n        this.setState({\n          data: []\n        }); // Set an empty array or handle error appropriately\n      }\n    });\n  }\n\n  render() {\n    const role = localStorage.getItem('role');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: \"Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), role === \"1\" && /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: this.state.data && this.state.data.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-outline-danger mx-2\",\n                      onClick: () => this.deleteUser(user.id),\n                      children: \"delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 27\n                  }, this)\n                }, user.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), role !== \"1\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Your not admin Stop!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","request","UsersContent","constructor","props","deleteUser","id","then","response","fetchUsers","console","log","data","catch","error","status","setState","state","componentDidMount","role","localStorage","getItem","render","map","user"],"sources":["D:/9raya_2/TEST/fullstack-jwt-chapter_1/frontend/src/components/AdminUser.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { request } from '../helpers/axios_helper';\r\n\r\nexport default class UsersContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const role = localStorage.getItem('role');\r\n\r\n    // Check if 'role' exists before making the request\r\n    if (!role) {\r\n      return;\r\n    }\r\n\r\n    this.fetchUsers();\r\n  }\r\n\r\n  fetchUsers() {\r\n    request('GET', '/GetUser')\r\n      .then((response) => {\r\n        this.setState({ data: response.data });\r\n        console.log(\"data:\", response.data);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response && error.response.status === 401) {\r\n          // Handle unauthorized access\r\n        } else {\r\n          this.setState({ data: [] }); // Set an empty array or handle error appropriately\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteUser = (id) => {\r\n    request('DELETE', `/User/${id}`)\r\n      .then((response) => {\r\n        // Assuming you want to refresh the user list after deletion\r\n        this.fetchUsers();\r\n        console.log(\"data:\", response.data);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response && error.response.status === 401) {\r\n          // Handle unauthorized access\r\n        } else {\r\n          this.setState({ data: [] }); // Set an empty array or handle error appropriately\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const role = localStorage.getItem('role');\r\n\r\n    return (\r\n      <div className=\"row justify-content-md-center\">\r\n        <div className=\"col-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">Users</h5>\r\n              {role === \"1\" && (\r\n                <table className=\"table\">\r\n                  {/* ... your table header ... */}\r\n                  <tbody>\r\n                    {this.state.data &&\r\n                      this.state.data.map((user) => (\r\n                        <tr key={user.id}>\r\n                          {/* ... your table data ... */}\r\n                          <td>\r\n                            <button\r\n                              className=\"btn btn-outline-danger mx-2\"\r\n                              onClick={() => this.deleteUser(user.id)}\r\n                            >\r\n                              delete\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                  </tbody>\r\n                </table>\r\n              )}\r\n              {role !== \"1\" && <h1>Your not admin Stop!</h1>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}